- name: Add NodeJS apt key.
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
  when: not use_ubuntu_node

- name: Add NodeJS repository.
  apt_repository:
    repo: 'deb https://deb.nodesource.com/node_8.x bionic main'
    state: present
    update_cache: yes
  when: not use_ubuntu_node

- name: Install the requirements for Superdesk
  package:
    name:
      - mongodb
      - nodejs
      - locales
      - python3-magic
      - git
      - python3
      - python3-dev
      - python3-venv
      - python3-virtualenv
      - build-essential
      - libffi-dev
      - libtiff5-dev
      - libjpeg8-dev
      - zlib1g-dev
      - libfreetype6-dev
      - liblcms2-dev
      - libwebp-dev
      - curl
      - libfontconfig
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - libxmlsec1-dev
    state: present
    
- name: Install redis
  package:
    name: redis
    state: present
  when: celery_host == 'localhost'

- name: Install Grunt
  npm:
    name: grunt-cli
    global: yes
  
- name: Clone the Superdesk repo
  git:
    repo: https://github.com/superdesk/superdesk.git
    version: publisher
    dest: /opt/superdesk
    accept_hostkey: yes
    
- name: Remove the virtualenv directory if it exists
  file:
    name: /opt/superdesk/env
    state: absent
    
- name: Install the pip and wheel using pip
  pip:
    chdir: /opt/superdesk/server
    name:
      - pip
      - wheel
    virtualenv: /opt/superdesk/env
    virtualenv_command: pyvenv-3.6
    
- name: Ensure that /root/.npm directory exists
  file:
    name: /root/.npm
    state: directory
    owner: root
    group: root
    mode: 0755
    
- name: NPM install 
  shell: "sudo npm install"
  args:
    chdir: /opt/superdesk/client
  become: yes
    
- name: Install the requirements.txt file using pip
  pip:
    chdir: /opt/superdesk/server
    virtualenv: /opt/superdesk/env
    virtualenv_command: pyvenv-3.6
    requirements: requirements.txt

- name: Copy the superdesk install script
  template: 
    src: superdesk-install.sh
    dest: /tmp/superdesk-install.sh
    owner: root
    mode: 0755
    
   
- name: Run the superdesk install script
  shell: "bash /tmp/superdesk-install.sh"
  become: yes
  environment:
    PUBLISHER_API_DOMAIN: "{{ tenant_domain }}"
    PUBLISHER_API_SUBDOMAIN: "{{ tenant_subdomain }}"
    SUPERDESK_URL: "{{ http_protocol }}://{{ superdesk_fqdn }}/{% if base_config == \"wp&superdesk\" %}superdesk/api{% else %}api{% endif %}"
    SUPERDESK_WS_URL: "{{ ws_protocol }}://{{ superdesk_fqdn }}/{% if base_config == \"wp&superdesk\" %}superdesk/ws{% else %}ws{% endif %}"
    HOST: "{{ superdesk_fqdn }}"
    PUBLISHER_WS_DOMAIN: "{{ superdesk_fqdn }}"
    PUBLISHER_WS_PORT: "{{ publisher_ws_port }}"
    PUBLISHER_WS_PATH: /superdesk/ws/
    CELERY_HOST: "{{ celery_host }}"
    IFRAMELY_KEY: "{{iframely_key}}"

- name: Run grunt
  shell: "grunt build --webpack-no-progress"
  environment:
    PUBLISHER_API_DOMAIN: "{{ tenant_domain }}"
    PUBLISHER_API_SUBDOMAIN: "{{ tenant_subdomain }}"
    SUPERDESK_URL: "{{ http_protocol }}://{{ superdesk_fqdn }}/{% if base_config == \"wp&superdesk\" %}superdesk/api{% else %}api{% endif %}"
    SUPERDESK_WS_URL: "{{ ws_protocol }}://{{ superdesk_fqdn }}/{% if base_config == \"wp&superdesk\" %}superdesk/ws{% else %}ws{% endif %}"
    HOST: "{{ superdesk_fqdn }}"
    PUBLISHER_WS_DOMAIN: "{{ superdesk_fqdn }}"
    PUBLISHER_WS_PORT: "{{ publisher_ws_port }}"
    PUBLISHER_WS_PATH: /superdesk/ws/
    CELERY_HOST: "{{ celery_host }}"
    IFRAMELY_KEY: "{{iframely_key}}"
  args:
    chdir: /opt/superdesk/client


#- name: Copy the config.js template
  #template:
    #src: files/config.js.j2
    #dest: /opt/superdesk/client/dist/config.js
    #owner: root
    #group: root
    #mode: 0644

#- name: Get the name of the JS bundle file
  #find:
    #paths: /opt/superdesk/client/dist
    #patterns: 'app.bundle.*.js'
  #register: file_result
  #when: use_http
  
#- name: Replace the protocol to HTTP in the app.bundle.js file
  #replace:
    #path: "{{ file_result['files'][0]['path'] }}"
    #regexp: 'server:{url:"https://{{ tenant_domain }}/api",ws:"ws://{{ tenant_domain }}/ws"}'
    #replace: 'server:{url:"http://{{ tenant_domain }}/superdesk/api",ws:"ws://{{ tenant_domain }}/superdesk/ws"}'
  #when: base_config == 'wp&superdesk'
  
#- name: Printing the result of finding the file
  #debug:
    #msg: "The result of the find operation: {{ file_result['files'][0]['path'] }}"
    
- name: Add the pyrunner user
  user:
    name: pyrunner
    shell: /usr/sbin/nologin
  
- name: Make sure that /opt/newsroom exists
  file:
    name: /opt/newsroom
    state: directory
    mode: 0755
    
- name: Clone the newsroom repository
  git:
    repo: 'https://github.com/superdesk/newsroom.git'
    dest: /opt/newsroom
    accept_hostkey: yes
    
- name: Copy the under_env script
  copy:
    src: files/under_env.sh
    dest: /root/under_env.sh
    owner: root
    group: root
    mode: 0755

- name: Install the requirements
  shell: "bash /root/under_env.sh"
  args:
    chdir: /opt/newsroom
  
#- name: Install Node packages
#  shell: npm install
#  args:
#    chdir: /opt/newsroom
    
- name: Create the newsroom service file
  copy:
    src: files/newsroom.service
    dest: /etc/systemd/system/newsroom.service
    owner: root
    group: root
    mode: 0644

- name: Create the superdesk service file
  template:
    src: files/superdesk.service
    dest: /etc/systemd/system/superdesk.service
    owner: root
    group: root
    mode: 0644
    
- name: Run daemon-reload
  systemd:
    daemon_reload: yes

- name: Enable Newsroom on boot
  service:
    name: newsroom
    enabled: yes
    
- name: Start service Newsroom
  service:
    name: newsroom
    state: started
    
- name: Enable Superdesk on boot
  service:
    name: superdesk
    enabled: yes

- name: Start service Superdesk
  service:
    name: superdesk
    state: started
    
- name: Ensure that the /var/log/superdesk directory exists
  file:
    path: /var/log/superdesk
    state: directory
    owner: root
    group: root
    mode: 0755
    
- name: Ensure that the permissions for logs allow pyrunner to write
  file:
    path: /var/log/superdesk/main.log
    state: touch
    owner: pyrunner
    group: root
    mode: 0644
    
- name: Start service superdesk
  service:
    name: superdesk
    state: started
    
#- name: Add config for Newsroom reverse proxy to Nginx config file
#  blockinfile:
#    path: /etc/nginx/conf.d/default.inc
#    block: |
#      location /newsroom {
#        proxy_pass http://localhost:5050/;
#        proxy_redirect http://$host/ /newsroom/;
#        expires epoch;
#      }
#  notify: restart nginx
    

    
    
