- name: Getting the repository
  git:
    repo: 'https://github.com/superdesk/web-publisher.git'
    dest: "{{ wp_dir }}"
    accept_hostkey: yes

- name: Create composer cache directory
  file: 
    path: /var/www/.composer
    state: directory
    owner: www-data
    group: www-data
    mode: 0755

- name: Changing ownership of webpublisher directory to www-data
  file: 
    dest: "{{ wp_dir }}"
    owner: www-data
    group: www-data
    recurse: yes

- name: Creating Symfony logs directories
  file: 
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
  with_items:
    - "{{ wp_dir }}/app/logs"
    - "{{ wp_dir }}/var/logs"

- name: Installing .env template
  template:
    src: templates/env.j2
    dest: "{{ wp_dir }}/.env"
    owner: www-data
    group: www-data
    mode: 0644

- name: Installing dependencies using Composer
  become: yes
  become_user: www-data
  composer:
    command: install
    working_dir: "{{ wp_dir }}"
    no_dev: no

- name: Create the database
  become: yes
  become_user: www-data
  environment: 
    SYMFONY_ENV: "prod"
  shell: "php app/console doctrine:database:create"
  args:
    chdir: "{{ wp_dir }}"
  when: create_db

- name: Populating the database
  become: yes
  become_user: www-data
  environment: 
    SYMFONY_ENV: "prod"
  shell: "php app/console doctrine:migrations:migrate --no-interaction"
  args:
    chdir: "{{ wp_dir }}"
    
- name: Create the ES index
  shell: "php app/console fos:elastica:create"
  args:
    chdir: "{{ wp_dir }}"

- name: Populate the ES index
  shell: "php app/console fos:elastica:populate"
  args:
    chdir: "{{ wp_dir }}"

#- name: Change the Superdesk instance address
  #lineinfile:
    #path: "{{ wp_dir }}/.env"
    #regexp: "^SUPERDESK_SERVERS"
    #line: 'SUPERDESK_SERVERS=''["localhost:5000"]'''
  #when: base_config == 'wp&superdesk'
    
- name: Create SSH keys directory
  file: 
    path: "{{ wp_dir }}/config/jwt"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
    
- name: Create keys using OpenSSL
  shell: "{{ item }}"
  with_items:
    - "openssl genpkey -algorithm RSA -out config/jwt/private.pem -pkeyopt rsa_keygen_bits:4096"
    - "openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem"
  args:
    chdir: "{{ wp_dir }}"

# Once the organization is created, the command returns its organization code. I've used a regex that gets it based on the fact that it is
# the only 6-character word.
- name: Create the organization
  shell: "SYMFONY_ENV=prod php app/console swp:organization:create {{ organization_name|quote }} | grep -o  '\\b[_[:alnum:]]\\{6\\}\\b'"
  register: organization_code
  args:
    chdir: "{{ wp_dir }}"
  
- debug:
   msg: "Successfully created new organization {{ organization_name|quote }} with code {{ organization_code['stdout_lines'][0] }}"

# It should be possible to create multiple tenants using a list of names, domain names or subdomains
- name: Create the new tenant
  shell: "SYMFONY_ENV=prod php app/console swp:tenant:create {{ organization_code['stdout_lines'][0] }} {{ tenant_domain }} {{ tenant_name }} {% if tenant_subdomain is defined %}{{ tenant_subdomain }} {% endif %} | grep -o  '\\b[_[:alnum:]]\\{6\\}\\b' | grep -v Tenant"
  register: tenant_code
  args:
    chdir: "{{ wp_dir }}"

- debug:
   msg: "Successfully created new tenant {{ tenant_name }} with code {{ tenant_code['stdout_lines'][0] }}"
   
- name: Install the theme for tenant {{ tenant_name }}
  become: yes
  become_user: www-data
  shell: "SYMFONY_ENV=prod php app/console swp:theme:install  {{ tenant_code['stdout_lines'][0] }} src/SWP/Bundle/FixturesBundle/Resources/themes/DefaultTheme/ -f --activate"
  args:
    chdir: "{{ wp_dir }}"
  
- name: Install theme assets to web directory
  become: yes
  become_user: www-data
  shell: "SYMFONY_ENV=prod php app/console sylius:theme:assets:install web"
  args:
    chdir: "{{ wp_dir }}"
    
- name: Clear the cache
  become: yes
  become_user: www-data
  shell: "SYMFONY_ENV=prod php app/console cache:clear --env=prod"
  args:
    chdir: "{{ wp_dir }}"
    
- name: Copying the Supervisor config files and restarting Supervisor
  template:
    src: "templates/{{ item }}.j2"
    dest: "/etc/supervisor/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "supervisor_analytics.conf"
    - "supervisor_webhooks.conf"
    - "supervisor_websocket.conf"
  notify: restart supervisor
  
#- name: Setting up the Nginx template
#  template:
#    src: templates/webpublisher.conf.j2
#    dest: /etc/nginx/sites-available/default 
#    owner: root
#    group: root
#    mode: 0644
#  notify: restart nginx
